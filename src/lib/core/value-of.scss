@import "../func/func-call--";
@import "../list/list-map--";
@import "../map/map-map-values--";
@import "../types/is-callable";
@import "../types/is-list";
@import "$value-of";

/// value-ofs value
/// @group core
///
/// @param { any } $value
/// @return { any }
///
/// @examples
///
///   @debug value-of(foo bar); // [foo, bar]
///   @debug value-of(foo); // "foo"
///
@function value-of($value, $other...) {
    $type: type-of($value);

    @if ($type == "string") {
        $value: #{ quote($value) };
    } @else if ($type == "map") {
        $value-of-prop: map-get($value, $value-of);

        $value: if(is-callable($value-of-prop), func-call--($value-of-prop, $value), map-map-values--($value, value-of));
    } @else if (is-list($value)) {
        $value: join((), list-map--($value, value-of), comma, true);
    }

    @return $value;
}