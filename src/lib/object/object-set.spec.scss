@import "../assert";
@import "../var/is-var";
@import "../var/let";
@import "object-get";
@import "object-set";

@include assert("object-set($object: object, $prop: string, $value: any): Sets specified property of the given object", (
  map-get(object-set((), foo, 1), foo) equal 1,

  is-var(map-get(object-set((foo: let(foo-value)), foo, 1), foo)) is-true,
  is-var(map-get(object-set(object-set((), foo, let(foo-value)), foo, 1), foo)) is-true,
  object-get(object-set((), foo, let(foo-value)), foo) equal foo-value,
));

@include assert("object-set($object: object, $prop: string, $value: any): should validate passed params", (
    (object-set, null) throws "ArgumentError: Invalid argument `$object` of `object-set($object: object, $prop: string, $value: any)`. Expected value of object, instead given null",
    (object-set, (), null) throws "ArgumentError: Invalid argument `$prop` of `object-set($object: object, $prop: string, $value: any)`. Expected value of string, instead given null",
));
