@import "../constructor/is-constructor";
@import "../constructor/instance-of--";
@import "../global/global";
@import "is-list";
@import "is-map";
@import "type/type--";

/// Determines whether the passed value is a type
/// @group types
///
/// @param { opt(any) } $value [null]
/// @return { bool }
///
/// @example
///
///    @debug is-type(number) // true
///    @debug is-type(number(px)) // true
///    @debug is-type(map(number, string)) // true
///
@function is-type($value: null, $other...) {
  $types: (
    "any",
    "arglist",
    "array",
    "bool",
    "callable",
    "color",
    "constructor",
    "function",
    "integer",
    "list",
    "map",
    "number",
    "null",
    "object",
    "spy",
    "string",
    "symbol",
    "type"
  );

  @return $value == null
    or (type-of($value) == "string" and index($types, $value) != null)
    or is-constructor($value)
    or instance-of--($value, global(type));
}