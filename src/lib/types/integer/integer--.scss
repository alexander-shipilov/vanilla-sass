@import "../../constructor/new--";
@import "../../constructor/super";
@import "../../core/@void";
@import "../../core/nvl";
@import "../../func/func-apply--";
@import "../../global/global";
@import "../type/--define-type";
@import "../type/--type-to-string";
@import "../number/number--";

/// @group types/integer
/// @access private
@function --integer-validate($value, $integer, $other...) {
  $unit: map-get($integer, unit);

  @return --number-validate($value, $integer) and floor($value) == $value;
}

/// @group types/integer
/// @access private
@function --integer-constructor($unit: null) {
  @if (not constructor-call-check()) {
    @return null;
  }

  @return map-merge(super(--integer-validate), (
    unit: $unit,
    $to-string: --number-to-string
  ));
}

/// Unsafe integer()
/// @group types/integer
/// @see integer
@function integer--($unit: null, $other...) {
  @return new--(global(integer), $unit);
}

@include void(--define-type(integer, --integer-constructor));