@import "../../assert";
@import "../is-type";
@import "../is-type-of";
@import "../map-of/map-of";
@import "optional";

$optional-string: optional(string);

@include assert("optional({ type }) creates a new optional type", (
  is-type($optional-string) is-true,
  map-get($optional-string, type) equal "string",
));

@include assert("to-string(optional({ type }))", (
  to-string(optional(string)) equal "?string",
  to-string(optional(optional(string))) equal "?string",
  to-string(optional(map-of(optional(string)))) equal '?map-of(?string)',
));

@include assert("optional: is-type-of", (
  is-type-of($optional-string, null) is-true,
  is-type-of($optional-string, "foo") is-true,
  is-type-of($optional-string, "") is-true,
  is-type-of($optional-string, 1) is-false,
));

@include assert("optional: should throw ArgumentError if invalid params passed", (
    (optional, 1) throws "ArgumentError: Invalid argument `$type` of `optional($type: type)`. Expected value of type, instead given { number } 1",
));