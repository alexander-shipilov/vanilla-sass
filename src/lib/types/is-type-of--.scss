@import "../constructor/is-constructor";
@import "../constructor/instance-of--";
@import "../func/func-call--";
@import "../spy/is-spy--";
@import "is-array";
@import "is-integer";
@import "is-list";
@import "is-map";
@import "is-callable";
@import "is-function";
@import "is-object";
@import "is-type";
@import "type/type--";

/// Unsafe list()
/// @group types
/// @see list
@function is-type-of--($type, $value, $other...) {
  $simple-types: (
    array: is-array,
    callable: is-callable,
    constructor: is-constructor,
    function: is-function,
    integer: is-integer,
    list: is-list,
    map: is-map,
    object: is-object,
    spy: is-spy--,
    type: is-type
  );

  @if ($type == "any") {
    @return true;
  }

  @if (map-has-key($simple-types, $type)) {
    @return func-call--(map-get($simple-types, $type), $value);
  }

  @if (is-constructor($type)) {
    @return instance-of--($value, $type);
  }

  @if (instance-of--($type, global(type))) {
    @return func-call--(map-get($type, validator), $value, $type);
  }

  @return type-of($value) == inspect($type);
}