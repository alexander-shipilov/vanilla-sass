@import "@assert";
@import "assert";
@import "assert-throws";
@import "assert-is-true";

@include assert("assert: throws an error if the passed assertion is falsy", (
    (assert, null) throws "AssertionError: Expected value to be truthy, instead received null",
    (assert, false) throws "AssertionError: Expected value to be truthy, instead received { bool } false",
    (assert, 0) throws "AssertionError: Expected value to be truthy, instead received { number } 0",
    (assert, "") throws 'AssertionError: Expected value to be truthy, instead received { string } ""',
));

@include assert("assert: should accept optional message", (
    (assert, false, "Custom Error") throws "Custom Error",
));

@include assert("assert: returns given value if the assertion passed", (
  assert(true) == true,
  assert("string") == "string",
  assert(()) == (),
));

@include assert("assert: should throw ArgumentError if invalid arguments passed", (
    (assert, true, 1) throws "ArgumentError: Invalid argument `$message` of `assert($assertion: any, $message: ?string)`. Expected value of ?string, instead given { number } 1",
    (assert, false, 1) throws "ArgumentError: Invalid argument `$message` of `assert($assertion: any, $message: ?string)`. Expected value of ?string, instead given { number } 1",
));
