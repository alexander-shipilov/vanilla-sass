@import "../assert";
@import "../func/func-const";
@import "--spec--/--test-costructor";
@import "instance-of";
@import "new";

@include assert("new: creates a new instance of the given constructor", (
    type-of(new($--test-constructor)) == "map",
    instance-of(new($--test-constructor), $--test-constructor) is-true,
));

@include assert("new: should throw if constructor returned no map", (
    (new, constructor((func-const, null), map-test)) throws "Error: Expected <constructor map-test> to return a map, instead returned null",
    (new, constructor((func-const, (1,)), map-test)) throws "Error: Expected <constructor map-test> to return a map, instead returned [1,]",
));

@include assert("new: should throw if super was not called", (
    (new, extend(constructor((func-const, ()), super-test), $--test-constructor)) throws "Error: <constructor super-test> is derived constructor. Call `super()` in <constructor super-test>",
));

@include assert("new: should throw ArgumentError if invalid arguments passed", (
    (new, null) throws "ArgumentError: Invalid argument `$constructor` of `new($constructor: constructor)`. Expected value of constructor, instead given null",
));